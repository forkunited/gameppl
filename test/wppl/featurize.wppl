// Run with:
// webppl test/wppl/featurize.wppl --require . --gamesDir examples/games/json --featureVocabDir examples/features/vocab --featureMatrixDir examples/features/mat

var args = parseArgs();
var gamesDir = args["gamesDir"];
var featureVocabDir = args["featureVocabDir"];
var featureMatrixDir = args["featureMatrixDir"];

var utteranceFn = gameppl.rgame.getPairedUtterancesFn(gameppl.rgame.senders.SPEAKER);
var actionFn = gameppl.rgame.getPairedActionsFn(gameppl.rgame.senders.SPEAKER)

var inputFeatureTypes = [
    {
        name : "utok", type : gameppl.feature.types.UTTERANCE_TOKEN_ANNOTATION_ENUMERABLE,
        parameters : { annotation : gameppl.rgame.annotations.TOKEN, minCount : 5 }
    },
    {
        name : "boxX", type : gameppl.feature.types.ACTION_DIMENSION_SCALAR,
        parameters : { prefix : "boxY" }
    },
    {
        name : "boxY", type : gameppl.feature.types.ACTION_DIMENSION_SCALAR,
        parameters : { prefix : "boxY" }
    },
    {
        name : "boxW", type : gameppl.feature.types.ACTION_DIMENSION_SCALAR,
        parameters : { prefix : "boxW" }
    },
    {
        name : "boxH", type : gameppl.feature.types.ACTION_DIMENSION_SCALAR,
        parameters : { prefix : "boxH" }
    },
    {
        name : "boxC", type : gameppl.feature.types.ACTION_DIMENSION_ENUMERABLE,
        parameters : { prefix : "boxC" }
    }
];

var inputVector = ["utok", "boxX", "boxY", "boxW", "boxH", "boxC"];
var inputf = gameppl.feature.initFeatureSet("testInput", gamesDir, utteranceFn, actionFn, inputFeatureTypes, inputVector);
var inputF = gameppl.feature.computeFeatureSet(inputf, gamesDir, gameppl.rgame.getGameUtteranceActionPairs);

var outputFeatureTypes = [
    {
        name : "mouse", type : gameppl.feature.types.ACTION_DIMENSION_SCALAR,
        parameters : { prefix : "mouse" }
    }
];

var outputVector = ["mouse"];
var outputf = gameppl.feature.initFeatureSet("testOutput", gamesDir, utteranceFn, actionFn, outputFeatureTypes, outputVector);
var outputF = gameppl.feature.computeFeatureSet(outputf, gamesDir, gameppl.rgame.getGameUtteranceActionPairs);

gameppl.feature.saveFeatureSet(inputf, featureVocabDir + "/input");
gameppl.feature.saveFeatureSet(outputf, featureVocabDir + "/output");

gameppl.feature.saveFeatureMatrix(inputF, featureMatrixDir + "/input");
gameppl.feature.saveFeatureMatrix(outputf, featureMatrixDir + "/output");

